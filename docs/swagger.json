{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Api for Pet Project",
        "title": "Kingdom Api",
        "contact": {},
        "version": "0.1.0"
    },
    "paths": {
        "/Ancestry": {
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ancestry"
                ],
                "summary": "Create and returns Ancestry or nil",
                "parameters": [
                    {
                        "description": "Feat data",
                        "name": "ancestry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AncestryCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Feat details",
                        "schema": {
                            "$ref": "#/definitions/model.AncestryExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Race/{id}": {
            "delete": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race"
                ],
                "summary": "Deletes Race by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Race id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Domain doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ancestry": {
            "get": {
                "description": "Return all GetAncestries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ancestry"
                ],
                "summary": "Returns all Ancestries",
                "responses": {
                    "200": {
                        "description": "Ancestry details",
                        "schema": {
                            "$ref": "#/definitions/model.Ancestry"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ancestry/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ancestry"
                ],
                "summary": "Returns Ancestry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ancestry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ancestry details",
                        "schema": {
                            "$ref": "#/definitions/model.Ancestry"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ancestry"
                ],
                "summary": "Deletes Ancestry by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ancestry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Domain doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ancestry"
                ],
                "summary": "Updates Ancestry by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ancestry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ancestry data",
                        "name": "Ancestry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AncestryUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ancestry details",
                        "schema": {
                            "$ref": "#/definitions/model.Ancestry"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Ancestry doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attribute/{id}": {
            "get": {
                "description": "Permissions for auth user or admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attribute"
                ],
                "summary": "Returns attribute by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "character_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attribute details",
                        "schema": {
                            "$ref": "#/definitions/model.AttributeExternal"
                        }
                    },
                    "404": {
                        "description": "Attribute not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attribute"
                ],
                "summary": "Updates Attribute by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attribute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Attribute data",
                        "name": "attribute",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateAttribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attribute details",
                        "schema": {
                            "$ref": "#/definitions/model.AttributeExternal"
                        }
                    },
                    "404": {
                        "description": "Attribute doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character": {
            "get": {
                "description": "Return all characters for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Returns all characters",
                "responses": {
                    "200": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Create and returns character or nil",
                "parameters": [
                    {
                        "description": "Character data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCharacter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character-item": {
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterItem"
                ],
                "summary": "Create and returns CharacterItem or nil",
                "parameters": [
                    {
                        "description": "CharacterItem data",
                        "name": "characterItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCharacterItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CharacterItem details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterItemExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character-item/list/{character_id}": {
            "get": {
                "description": "Return all CharacterItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterItem"
                ],
                "summary": "Returns all CharacterItems",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character id",
                        "name": "character_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CharacterItem details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterItemExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character-item/{id}": {
            "get": {
                "description": "Retrieve CharacterItem details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterItem"
                ],
                "summary": "Returns CharacterItem by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CharacterItem id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CharacterItem details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterItemExternal"
                        }
                    },
                    "404": {
                        "description": "CharacterItem not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterItem"
                ],
                "summary": "Deletes CharacterItem by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CharacterItem id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "CharacterItem doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterItem"
                ],
                "summary": "Updates CharacterItem by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CharacterItem id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CharacterItem data",
                        "name": "characterItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCharacterItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CharacterItem details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterItemExternal"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "CharacterItem doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character/{id}": {
            "get": {
                "description": "Retrieve Character details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Returns Character by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "404": {
                        "description": "Character not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Deletes Character by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Character doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Updates Character by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Character data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CharacterUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "404": {
                        "description": "Character doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character_boost/{id}": {
            "get": {
                "description": "Permissions for auth user or admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterBoost"
                ],
                "summary": "Returns CharacterBoost by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "character_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CharacterBoost details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterBoostExternal"
                        }
                    },
                    "404": {
                        "description": "CharacterBoost not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CharacterBoost"
                ],
                "summary": "Updates CharacterBoost by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CharacterBoost id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CharacterBoost data",
                        "name": "CharacterBoost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCharacterBoost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CharacterBoost details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterBoostExternal"
                        }
                    },
                    "404": {
                        "description": "CharacterBoost doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/class": {
            "post": {
                "description": "Create new Character Class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Class"
                ],
                "summary": "Create and returns new Character Class or nil",
                "parameters": [
                    {
                        "description": "Character Class data",
                        "name": "god",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CharacterClassCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Character Class details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterClass"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/domain": {
            "get": {
                "description": "Return all domains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Returns all domains",
                "responses": {
                    "200": {
                        "description": "Domain details",
                        "schema": {
                            "$ref": "#/definitions/model.Domain"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Create and returns domain or nil",
                "parameters": [
                    {
                        "description": "Domain data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateDomain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Domain details",
                        "schema": {
                            "$ref": "#/definitions/model.DomainExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/domain/{id}": {
            "get": {
                "description": "Retrieve Domain details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Returns Domain by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "domain id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "domain details",
                        "schema": {
                            "$ref": "#/definitions/model.Domain"
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Deletes Domain by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Domain id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Domain doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Updates Domain by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Domain id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Domain data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateDomain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain details",
                        "schema": {
                            "$ref": "#/definitions/model.DomainExternal"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Domain doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/feat": {
            "get": {
                "description": "Return all Feats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns all Feats",
                "responses": {
                    "200": {
                        "description": "Feat details",
                        "schema": {
                            "$ref": "#/definitions/model.Feat"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feat"
                ],
                "summary": "Create and returns Feat or nil",
                "parameters": [
                    {
                        "description": "Feat data",
                        "name": "feat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateFeat"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Feat details",
                        "schema": {
                            "$ref": "#/definitions/model.FeatExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/feat/{id}": {
            "delete": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feat"
                ],
                "summary": "Deletes Feat by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feat id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Domain doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Updates Feat by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feat id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feat data",
                        "name": "Feat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateFeat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feat details",
                        "schema": {
                            "$ref": "#/definitions/model.Feat"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Feat doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/god": {
            "get": {
                "description": "Return all gods and their domains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "Returns all gods",
                "responses": {
                    "200": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new God",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "Create and returns new God or nil",
                "parameters": [
                    {
                        "description": "God data",
                        "name": "god",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GodCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "God details",
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/god/{id}": {
            "get": {
                "description": "Retrieve God details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "Returns God by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "god id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "God details",
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    },
                    "404": {
                        "description": "God not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Auth user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "Deletes God by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "God id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "God doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates God",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "Updates God by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "God id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "God data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GodUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "God details",
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    },
                    "404": {
                        "description": "God doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item": {
            "get": {
                "description": "Return all items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns all items",
                "responses": {
                    "200": {
                        "description": "Item details",
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/Feat/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns Feat by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feat id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feat details",
                        "schema": {
                            "$ref": "#/definitions/model.Feat"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/armor": {
            "get": {
                "description": "Return all armors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns all armors",
                "responses": {
                    "200": {
                        "description": "Armor details",
                        "schema": {
                            "$ref": "#/definitions/model.Armor"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create and returns armor or nil",
                "parameters": [
                    {
                        "description": "Armor data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateArmor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Armor details",
                        "schema": {
                            "$ref": "#/definitions/model.ArmorExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/armor/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns Armor by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "armor id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Armor details",
                        "schema": {
                            "$ref": "#/definitions/model.Armor"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Updates Armor by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Armor id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Armor data",
                        "name": "armor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateArmor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Armor details",
                        "schema": {
                            "$ref": "#/definitions/model.Armor"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Armor doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/gear": {
            "get": {
                "description": "Return all gears",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns all gears",
                "responses": {
                    "200": {
                        "description": "Gear details",
                        "schema": {
                            "$ref": "#/definitions/model.Gear"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create and returns Gear or nil",
                "parameters": [
                    {
                        "description": "Gear data",
                        "name": "gear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateGear"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Gear details",
                        "schema": {
                            "$ref": "#/definitions/model.GearExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/gear/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns Gear by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gear id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gear details",
                        "schema": {
                            "$ref": "#/definitions/model.Gear"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Updates Gear by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gear id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Gear data",
                        "name": "Gear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateGear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gear details",
                        "schema": {
                            "$ref": "#/definitions/model.Gear"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Gear doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/weapon": {
            "get": {
                "description": "Return all weapons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns all weapons",
                "responses": {
                    "200": {
                        "description": "Weapon details",
                        "schema": {
                            "$ref": "#/definitions/model.Weapon"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create and returns weapon or nil",
                "parameters": [
                    {
                        "description": "Weapon data",
                        "name": "weapon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateWeapon"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Weapon details",
                        "schema": {
                            "$ref": "#/definitions/model.WeaponExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/weapon/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns weapon by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Weapon id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Weapon details",
                        "schema": {
                            "$ref": "#/definitions/model.Weapon"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Updates weapon by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Weapon id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Weapon data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateWeapon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Weapon details",
                        "schema": {
                            "$ref": "#/definitions/model.Weapon"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Weapon doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns Item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item details",
                        "schema": {
                            "$ref": "#/definitions/model.ItemExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Deletes Item by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Item doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизация пользователя по логину и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user for token",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/race": {
            "get": {
                "description": "Return all Races",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race"
                ],
                "summary": "Returns all Races",
                "responses": {
                    "200": {
                        "description": "Race details",
                        "schema": {
                            "$ref": "#/definitions/model.Race"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race"
                ],
                "summary": "Create and returns Race or nil",
                "parameters": [
                    {
                        "description": "Feat data",
                        "name": "race",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RaceCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Feat details",
                        "schema": {
                            "$ref": "#/definitions/model.RaceExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/race/{id}": {
            "get": {
                "description": "Permissions for auth users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race"
                ],
                "summary": "Returns Race by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Race id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Race details",
                        "schema": {
                            "$ref": "#/definitions/model.Race"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race"
                ],
                "summary": "Updates Race by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Race id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Race data",
                        "name": "race",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RaceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Race details",
                        "schema": {
                            "$ref": "#/definitions/model.Race"
                        }
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Race doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/slot/{id}": {
            "get": {
                "description": "Permissions for auth user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Slot"
                ],
                "summary": "Returns slot by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "slot id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "slot details",
                        "schema": {
                            "$ref": "#/definitions/model.SlotExternal"
                        }
                    },
                    "404": {
                        "description": "Slot not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Slot"
                ],
                "summary": "Updates Slot by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Slot id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Character data",
                        "name": "slot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SlotUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.SlotExternal"
                        }
                    },
                    "404": {
                        "description": "Slot doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Returns all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns all users",
                "responses": {
                    "200": {
                        "description": "User list",
                        "schema": {
                            "$ref": "#/definitions/model.UserExternal"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create and returns user or nil",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user details",
                        "schema": {
                            "$ref": "#/definitions/model.UserExternal"
                        }
                    },
                    "404": {
                        "description": "User already exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "patch": {
                "description": "Permissions: Current User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Changes User's password",
                "parameters": [
                    {
                        "description": "User password data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserPasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You need to provide a valid access token or user credentials to access this api",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Retrieve User details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "returns User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user details",
                        "schema": {
                            "$ref": "#/definitions/model.UserExternal"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns and delete User by ID if you're admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You need to provide a valid access token or user credentials to access this api",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin and current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserUpdateExternal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You need to provide a valid access token or user credentials to access this api",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Ancestry": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "raceID": {
                    "type": "integer"
                }
            }
        },
        "model.AncestryCreate": {
            "type": "object",
            "required": [
                "description",
                "name",
                "race_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "integer"
                }
            }
        },
        "model.AncestryExternal": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "integer"
                }
            }
        },
        "model.AncestryUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "integer"
                }
            }
        },
        "model.Armor": {
            "type": "object",
            "properties": {
                "armorClass": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/model.Item"
                }
            }
        },
        "model.ArmorExternal": {
            "type": "object",
            "required": [
                "name",
                "price"
            ],
            "properties": {
                "armor_class": {
                    "type": "integer"
                },
                "bulk": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.Attribute": {
            "type": "object",
            "properties": {
                "characterID": {
                    "type": "integer"
                },
                "charisma": {
                    "type": "integer"
                },
                "constitution": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "wisdom": {
                    "type": "integer"
                }
            }
        },
        "model.AttributeExternal": {
            "type": "object",
            "properties": {
                "characterID": {
                    "type": "integer"
                },
                "charisma": {
                    "type": "integer"
                },
                "constitution": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "wisdom": {
                    "type": "integer"
                }
            }
        },
        "model.Background": {
            "type": "object",
            "properties": {
                "attributeBoost": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "skill": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Skill"
                    }
                }
            }
        },
        "model.Character": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "attribute": {
                    "$ref": "#/definitions/model.Attribute"
                },
                "characterBoost": {
                    "$ref": "#/definitions/model.CharacterBoost"
                },
                "characterDefence": {
                    "$ref": "#/definitions/model.CharacterDefence"
                },
                "characterItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterItem"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Slot"
                    }
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterBoost": {
            "type": "object",
            "properties": {
                "characterID": {
                    "type": "integer"
                },
                "charisma": {
                    "type": "integer"
                },
                "constitution": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "free": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "wisdom": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterBoostExternal": {
            "type": "object",
            "properties": {
                "characterID": {
                    "type": "integer"
                },
                "charisma": {
                    "type": "integer"
                },
                "constitution": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "free": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "wisdom": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterClass": {
            "type": "object",
            "properties": {
                "commonWeaponMastery": {
                    "type": "string"
                },
                "fortitudeMastery": {
                    "type": "string"
                },
                "health": {
                    "type": "integer"
                },
                "heavyArmorMastery": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lightArmorMastery": {
                    "type": "string"
                },
                "martialWeaponMastery": {
                    "type": "string"
                },
                "mediumArmorMastery": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "perceptionMastery": {
                    "type": "string"
                },
                "reflexMastery": {
                    "type": "string"
                },
                "unArmedWeaponMastery": {
                    "type": "string"
                },
                "unarmedMastery": {
                    "type": "string"
                },
                "willMastery": {
                    "type": "string"
                }
            }
        },
        "model.CharacterClassCreate": {
            "type": "object",
            "properties": {
                "health": {
                    "type": "integer",
                    "example": 6
                },
                "name": {
                    "type": "string",
                    "example": "Fighter"
                },
                "perception_mastery": {
                    "type": "string",
                    "example": "Train"
                }
            }
        },
        "model.CharacterDefence": {
            "type": "object",
            "properties": {
                "armorClass": {
                    "type": "integer"
                },
                "characterID": {
                    "type": "integer"
                },
                "dying": {
                    "type": "integer"
                },
                "fortitude": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "heavyArmor": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "hitPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lightArmor": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "maxHitPoint": {
                    "type": "integer"
                },
                "mediumArmor": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "perception": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "reflex": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "speed": {
                    "type": "integer"
                },
                "temporaryHitPoint": {
                    "type": "integer"
                },
                "unarmed": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "will": {
                    "$ref": "#/definitions/model.MasteryLevel"
                },
                "wounded": {
                    "type": "boolean"
                }
            }
        },
        "model.CharacterExternal": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "attribute": {
                    "$ref": "#/definitions/model.Attribute"
                },
                "character_boost": {
                    "$ref": "#/definitions/model.CharacterBoost"
                },
                "character_item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterItem"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Slot"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterItem": {
            "type": "object",
            "properties": {
                "armor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Slot"
                    }
                },
                "character": {
                    "$ref": "#/definitions/model.Character"
                },
                "characterID": {
                    "type": "integer"
                },
                "firstWeapon": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Slot"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/model.Item"
                },
                "itemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "secondWeapon": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Slot"
                    }
                }
            }
        },
        "model.CharacterItemExternal": {
            "type": "object",
            "properties": {
                "bulk": {
                    "type": "number"
                },
                "character_id": {
                    "type": "integer"
                },
                "character_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemID": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                },
                "item_type": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.CharacterUpdate": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateArmor": {
            "type": "object",
            "required": [
                "description",
                "name",
                "price"
            ],
            "properties": {
                "armor_class": {
                    "type": "integer"
                },
                "bulk": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.CreateCharacter": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateCharacterItem": {
            "type": "object",
            "required": [
                "character_id",
                "item_id"
            ],
            "properties": {
                "character_id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.CreateDomain": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateFeat": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateGear": {
            "type": "object",
            "required": [
                "bulk",
                "description",
                "name",
                "price"
            ],
            "properties": {
                "bulk": {
                    "type": "number",
                    "example": 1
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.CreateWeapon": {
            "type": "object",
            "required": [
                "bulk",
                "damage_type",
                "description",
                "dice",
                "diceQuantity",
                "name",
                "price"
            ],
            "properties": {
                "bulk": {
                    "type": "number",
                    "example": 0.1
                },
                "damage": {
                    "type": "integer"
                },
                "damage_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dice": {
                    "type": "integer",
                    "example": 4
                },
                "diceQuantity": {
                    "type": "integer",
                    "example": 1
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.Domain": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "gods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.God"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.DomainExternal": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.DomainID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.Feat": {
            "type": "object",
            "properties": {
                "background": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Background"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.FeatExternal": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Gear": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/model.Item"
                }
            }
        },
        "model.GearExternal": {
            "type": "object",
            "properties": {
                "bulk": {
                    "type": "number",
                    "example": 1
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.God": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "alignment": {
                    "type": "string"
                },
                "anathema": {
                    "type": "string"
                },
                "areasOfInterest": {
                    "type": "string"
                },
                "chosenWeapon": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Domain"
                    }
                },
                "edict": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sacredAnimals": {
                    "type": "string"
                },
                "sacredColors": {
                    "type": "string"
                },
                "temples": {
                    "type": "string"
                },
                "worships": {
                    "type": "string"
                }
            }
        },
        "model.GodCreate": {
            "type": "object",
            "required": [
                "alias",
                "alignment",
                "anathema",
                "areas_of_interest",
                "chosen_weapon",
                "domains",
                "edict",
                "name",
                "sacred_animals",
                "sacred_colors",
                "temples",
                "worships"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "The Song of the Spheres"
                },
                "alignment": {
                    "type": "string",
                    "example": "CG"
                },
                "anathema": {
                    "type": "string"
                },
                "areas_of_interest": {
                    "type": "string"
                },
                "chosen_weapon": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DomainID"
                    }
                },
                "edict": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Desna"
                },
                "sacred_animals": {
                    "type": "string"
                },
                "sacred_colors": {
                    "type": "string"
                },
                "temples": {
                    "type": "string"
                },
                "worships": {
                    "type": "string"
                }
            }
        },
        "model.GodUpdate": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "alignment": {
                    "type": "string"
                },
                "anathema": {
                    "type": "string"
                },
                "areas_of_interest": {
                    "type": "string"
                },
                "chosen_weapon": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DomainID"
                    }
                },
                "edict": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sacred_animals": {
                    "type": "string"
                },
                "sacred_colors": {
                    "type": "string"
                },
                "temples": {
                    "type": "string"
                },
                "worships": {
                    "type": "string"
                }
            }
        },
        "model.HitPoint": {
            "type": "string",
            "enum": [
                "Six",
                "Eight",
                "Ten",
                "Twelve"
            ],
            "x-enum-varnames": [
                "Six",
                "Eight",
                "Ten",
                "Twelve"
            ]
        },
        "model.Item": {
            "type": "object",
            "properties": {
                "bulk": {
                    "type": "number"
                },
                "characterItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterItem"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownerID": {
                    "type": "integer"
                },
                "ownerType": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.ItemExternal": {
            "type": "object",
            "required": [
                "name",
                "price"
            ],
            "properties": {
                "bulk": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "owner_type": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.MasteryLevel": {
            "type": "string",
            "enum": [
                "None",
                "Train",
                "Expert",
                "Master",
                "Legend"
            ],
            "x-enum-varnames": [
                "None",
                "Train",
                "Expert",
                "Master",
                "Legend"
            ]
        },
        "model.Race": {
            "type": "object",
            "properties": {
                "abilityBoost": {
                    "type": "string"
                },
                "ancestry": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Ancestry"
                    }
                },
                "description": {
                    "type": "string"
                },
                "hitPoint": {
                    "$ref": "#/definitions/model.HitPoint"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "$ref": "#/definitions/model.SquareSize"
                },
                "speed": {
                    "type": "integer"
                }
            }
        },
        "model.RaceCreate": {
            "type": "object",
            "required": [
                "description",
                "hit_points",
                "name",
                "size",
                "speed"
            ],
            "properties": {
                "ability_boost": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hit_points": {
                    "$ref": "#/definitions/model.HitPoint"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "$ref": "#/definitions/model.SquareSize"
                },
                "speed": {
                    "type": "integer"
                }
            }
        },
        "model.RaceExternal": {
            "type": "object",
            "properties": {
                "ability_boost": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hit_points": {
                    "$ref": "#/definitions/model.HitPoint"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "$ref": "#/definitions/model.SquareSize"
                },
                "speed": {
                    "type": "integer"
                }
            }
        },
        "model.RaceUpdate": {
            "type": "object",
            "properties": {
                "ability_boost": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hit_points": {
                    "$ref": "#/definitions/model.HitPoint"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "$ref": "#/definitions/model.SquareSize"
                },
                "speed": {
                    "type": "integer"
                }
            }
        },
        "model.Skill": {
            "type": "object",
            "properties": {
                "background": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Background"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Slot": {
            "type": "object",
            "properties": {
                "armor": {
                    "$ref": "#/definitions/model.CharacterItem"
                },
                "armorID": {
                    "type": "integer"
                },
                "character": {
                    "$ref": "#/definitions/model.Character"
                },
                "characterID": {
                    "type": "integer"
                },
                "firstWeapon": {
                    "$ref": "#/definitions/model.CharacterItem"
                },
                "firstWeaponID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "secondWeapon": {
                    "$ref": "#/definitions/model.CharacterItem"
                },
                "secondWeaponID": {
                    "type": "integer"
                }
            }
        },
        "model.SlotExternal": {
            "type": "object",
            "properties": {
                "armor_id": {
                    "type": "integer"
                },
                "character_id": {
                    "type": "integer"
                },
                "first_weapon_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "second_weapon_id": {
                    "type": "integer"
                }
            }
        },
        "model.SlotUpdate": {
            "type": "object",
            "properties": {
                "armor_id": {
                    "type": "integer"
                },
                "character_id": {
                    "type": "integer"
                },
                "first_weapon_id": {
                    "type": "integer"
                },
                "second_weapon_id": {
                    "type": "integer"
                }
            }
        },
        "model.SquareSize": {
            "type": "string",
            "enum": [
                "Tiny",
                "Small",
                "Medium",
                "Large",
                "Huge",
                "Gargantuan"
            ],
            "x-enum-varnames": [
                "Tiny",
                "Small",
                "Medium",
                "Large",
                "Huge",
                "Gargantuan"
            ]
        },
        "model.UpdateArmor": {
            "type": "object",
            "properties": {
                "armor_class": {
                    "type": "integer"
                },
                "bulk": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.UpdateAttribute": {
            "type": "object",
            "properties": {
                "charisma": {
                    "type": "integer",
                    "example": 10
                },
                "constitution": {
                    "type": "integer",
                    "example": 10
                },
                "dexterity": {
                    "type": "integer",
                    "example": 10
                },
                "intelligence": {
                    "type": "integer",
                    "example": 10
                },
                "strength": {
                    "type": "integer",
                    "example": 10
                },
                "wisdom": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "model.UpdateCharacterBoost": {
            "type": "object",
            "properties": {
                "charisma": {
                    "type": "integer",
                    "example": 10
                },
                "constitution": {
                    "type": "integer",
                    "example": 10
                },
                "dexterity": {
                    "type": "integer",
                    "example": 10
                },
                "free": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer",
                    "example": 10
                },
                "strength": {
                    "type": "integer",
                    "example": 10
                },
                "wisdom": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "model.UpdateCharacterItem": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "character_id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.UpdateDomain": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.UpdateFeat": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.UpdateGear": {
            "type": "object",
            "properties": {
                "bulk": {
                    "type": "number",
                    "example": 1
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.UpdateWeapon": {
            "type": "object",
            "properties": {
                "bulk": {
                    "type": "number"
                },
                "damage": {
                    "type": "integer"
                },
                "damage_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dice": {
                    "type": "integer"
                },
                "diceQuantity": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "model.UserExternal": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Character"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserPasswordUpdate": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserUpdateExternal": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Weapon": {
            "type": "object",
            "properties": {
                "damage": {
                    "type": "integer"
                },
                "damageType": {
                    "type": "string"
                },
                "dice": {
                    "type": "integer"
                },
                "diceQuantity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/model.Item"
                }
            }
        },
        "model.WeaponExternal": {
            "type": "object",
            "required": [
                "name",
                "price"
            ],
            "properties": {
                "bulk": {
                    "type": "number"
                },
                "damage": {
                    "type": "integer",
                    "example": 1
                },
                "damage_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dice": {
                    "type": "integer",
                    "example": 1
                },
                "diceQuantity": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "JWT security accessToken. Please add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}