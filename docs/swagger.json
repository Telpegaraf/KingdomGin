{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Api for Pet Project",
        "title": "Kingdom Api",
        "contact": {},
        "version": "0.1.0"
    },
    "paths": {
        "/character": {
            "get": {
                "description": "Return all characters for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Returns all characters",
                "responses": {
                    "200": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Create and returns character or nil",
                "parameters": [
                    {
                        "description": "Character data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCharacter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/character/{id}": {
            "get": {
                "description": "Retrieve Character details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Returns Character by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "404": {
                        "description": "Character not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Deletes Character by ID or returns nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "You can't access for this API",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Character doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Character's User or Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character"
                ],
                "summary": "Updates Character by ID or nil",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Character data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CharacterUpdateExternal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Character details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterExternal"
                        }
                    },
                    "404": {
                        "description": "Character doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/class": {
            "post": {
                "description": "Create new Character Class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Class"
                ],
                "summary": "Create and returns new Character Class or nil",
                "parameters": [
                    {
                        "description": "Character Class data",
                        "name": "god",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CharacterClassCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Character Class details",
                        "schema": {
                            "$ref": "#/definitions/model.CharacterClass"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/god": {
            "post": {
                "description": "Create new God",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "Create and returns new God or nil",
                "parameters": [
                    {
                        "description": "God data",
                        "name": "god",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "God details",
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/god/{id}": {
            "get": {
                "description": "Retrieve God details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "God"
                ],
                "summary": "returns God by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "god id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "God details",
                        "schema": {
                            "$ref": "#/definitions/model.God"
                        }
                    },
                    "404": {
                        "description": "God not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизация пользователя по логину и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user for token",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Returns all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns all users",
                "responses": {
                    "200": {
                        "description": "User list",
                        "schema": {
                            "$ref": "#/definitions/model.UserExternal"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create and returns user or nil",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user details",
                        "schema": {
                            "$ref": "#/definitions/model.UserExternal"
                        }
                    },
                    "404": {
                        "description": "User already exist",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "patch": {
                "description": "Permissions: Current User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Changes User's password",
                "parameters": [
                    {
                        "description": "User password data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserPasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You need to provide a valid access token or user credentials to access this api",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Retrieve User details using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "returns User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user details",
                        "schema": {
                            "$ref": "#/definitions/model.UserExternal"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns and delete User by ID if you're admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You need to provide a valid access token or user credentials to access this api",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permissions for Admin and current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserUpdateExternal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User doesn't exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You need to provide a valid access token or user credentials to access this api",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Character": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterClass": {
            "type": "object",
            "properties": {
                "health": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "perceptionMastery": {
                    "$ref": "#/definitions/model.MasteryLevel"
                }
            }
        },
        "model.CharacterClassCreate": {
            "type": "object",
            "properties": {
                "health": {
                    "type": "integer",
                    "example": 6
                },
                "name": {
                    "type": "string",
                    "example": "Fighter"
                },
                "perception_mastery": {
                    "type": "string",
                    "example": "Train"
                }
            }
        },
        "model.CharacterExternal": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterUpdateExternal": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateCharacter": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CreateUser": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Domain": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "gods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.God"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.God": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "alignment": {
                    "type": "string"
                },
                "anathema": {
                    "type": "string"
                },
                "areasOfInterest": {
                    "type": "string"
                },
                "chosenWeapon": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Domain"
                    }
                },
                "edict": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sacredAnimals": {
                    "type": "string"
                },
                "sacredColors": {
                    "type": "string"
                },
                "temples": {
                    "type": "string"
                },
                "worships": {
                    "type": "string"
                }
            }
        },
        "model.MasteryLevel": {
            "type": "string",
            "enum": [
                "None",
                "Train",
                "Expert",
                "Master",
                "Legend"
            ],
            "x-enum-varnames": [
                "None",
                "Train",
                "Expert",
                "Master",
                "Legend"
            ]
        },
        "model.UserExternal": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Character"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserPasswordUpdate": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserUpdateExternal": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "JWT security accessToken. Please add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}